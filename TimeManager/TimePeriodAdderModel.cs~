
using System;
using Gtk;
using Npgsql;
using NpgsqlTypes;

namespace TimeManager
{


	public class TimePeriodAdderModel
	{

		TimePeriodAdderView tpv;
		bool definingBlock = false;
		
		public TimePeriodAdderModel (TimePeriodAdderView tpv)			
		{
			this.tpv = tpv;
		}
		
		public void recvNoteTime(DateTime startTime)
		{
			if (!definingBlock) {
				tpv.setStartTimeString(startTime.ToString());
			} else {
				tpv.setEndTimeString(startTime.ToString());
			}
		}
		
		public void startDefiningTimeblock()
		{
			definingBlock = true;
		}
		
		public void addTimeBlock()
		{
			DateTime start;
			DateTime.TryParse(tpv.getStartTimeString(), out start);
			start.AddSeconds(-1);
			end.AddSeconds(1);
			
			DateTime.TryParse(tpv.getEndTimeString(), end);
			string comment = tpv.getComment();
			insertBlockIntoDb(start, end, comment);
			
		}
		private NpgsqlConnection Connection() 
		{
			NpgsqlConnection conn = new NpgsqlConnection("Server=127.0.0.1;Port=5432;User Id=simon;Password=dd44yi;Database=time_management;");
			return conn;
		}
		
		private void insertBlockIntoDb(DateTime start, DateTime end, string comment)
		{
			using (NpgsqlConnection conn = Connection())
			{
				conn.Open();
		
				String query = "insert into time_blocks(start_time,end_time,comment) values (:start,:end,:comment);";
				using (NpgsqlCommand command = 
				       new NpgsqlCommand(query, conn))
				{
					command.Parameters.Add(new NpgsqlParameter("start", NpgsqlDbType.Timestamp));
					command.Parameters.Add(new NpgsqlParameter("end", NpgsqlDbType.Timestamp));
					command.Parameters.Add(new NpgsqlParameter("comment", NpgsqlDbType.Text));
					

					command.Prepare();
	            	
					command.Parameters[0].Value = start;
					command.Parameters[1].Value = end;
					command.Parameters[2].Value = comment;
					
					command.Execute();				
					
				}
				conn.Close();
			}
		}		
	}
}